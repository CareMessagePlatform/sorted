= sorted

Sorted is a simple library that lets you sort things using ActiveRecord and create sort links using ActionView templates

It will toggle your sort order for you and is ideal for working with large datasets with {will_paginate}[http://github.com/mislav/will_paginate]

== Example

=== The view:

  link_to_sorted "Email", :email

This will make a url like this:

  http://myapp/users?sort=email_asc

Or on the next page load when you then sort by something else....

  http://myapp/users?sort=name_asc!email_asc

=== The model:

This will initially sort by email ascending:

  @users = User.sorted(:order => "email ASC", :sort => params[:sort]).paginate(:page => params[:page])

== Rails 2.3.x

This gem works with rails 2.3.x but you will have to roll your own scope and view helper

Here is the scope:

  named_scope :sorted, lambda { |params|
    { :order =>  Sorted::Sorter.new(params[:order], {:sort => params[:sort]}).to_sql }
  }

And this in your application:

  def sorted(order)
    Sorted::Sorter.new(order, (request.get? && !params.nil?) ? params.dup : nil).toggle
  end

  def link_to_sorted(name, order)
    sorter = sorted(order)
    link_to(name, sorter.params, {:class => sorter.css_class})
  end
